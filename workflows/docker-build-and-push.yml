on:
  workflow_call:
    inputs:
      uses-ecr:
        description: Set false if the repository contains its own registry name, e.g. `localhost:5000/my-repo`, not miso ECR
        default: true
        type: boolean
        required: false
      repository:
        description: Docker repository name. Do not include registry name, e.g. `miso/blink`
        required: true
        type: string
      tag:
        description: Tag to push. Git SHA will be appended to the tag like `tag-345abcd` automatically.
        default: latest
        type: string
        required: false
      context:
        description: Context to build docker image
        default: .
        type: string
        required: false
      dockerfile:
        description: File to build docker image
        default: ./Dockerfile
        type: string
        required: false
    outputs:
      image:
        description: Image name to push
        type: string
        value: ${{jobs.docker-build-and-push.steps.target.outputs.tag-with-rev}}
      dotenv:
        description: .env file to use
        type: string
        value: ${{toJSON(jobs.docker-build-and-push.steps.dotenv.outputs)}}
    secrets:
      aws-access-key-id:
        description: AWS access key ID
        required: true
      aws-secret-access-key:
        description: AWS secret access key
        required: true
      aws-region:
        description: AWS region
        required: false

jobs:
  docker-build-and-push:
    name: Build docker image and push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Prepare .env file
      id: dotenv
      uses: nohmad/aws-ssm-parameter-store-action@v3
      if: ${{ startsWith(inputs.parameter-store-prefix, "/config/")}}
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        path: ${{inputs.parameter-store-prefix}}
        format: dotenv

    - name: Set tags
      id: target
      run: |
        if [[ "${{inputs.usse-ecr}}" = "true" ]]; then
          repo="${{steps.login-ecr.outputs.registry}}/${{inputs.repository}}"
        else
          repo="${{inputs.repository}}"
        fi
        tag_with_rev="$repo:${{inputs.tag}}-${GITHUB_SHA::7}"
        declare -a tags=("$repo:${{inputs.tag}}" $tag_with_rev)
        echo "::set-output name=tags::$(IFS=,; echo \"${tags[@]}\")"
        echo "::set-output name=image-with-rev::$tag_with_rev"

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-layers-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-layers

    - name: Set up Docker Buildx
      id: buildx
      # Use the action from the master, as we've seen some inconsistencies with @v1
      # Issue: https://github.com/docker/build-push-action/issues/286
      uses: docker/setup-buildx-action@master

    - name: Build docker image and Push to ECR
      uses: docker/build-push-action@v2
      with:
        builder: ${{steps.buildx.outputs.name}}
        context: ${{inputs.context}}
        file: ${{inputs.dockerfile}}
        push: true
        tags: ${{steps.target.outputs.tags}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

